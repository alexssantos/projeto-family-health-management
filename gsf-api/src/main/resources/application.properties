# ===============================
# = SPRINT TONCAT SERVER CONFIG
# ===============================

## Alternative server Port
server.port=8080


# ===============================
# = DATABASE
# ===============================

### >> H2 /////////////
spring.datasource.url=jdbc:h2:file:~/databases/H2/db_alex_at
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
### >> H2 CONSOLE =  http://localhost:8080/h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.h2.console.settings.trace=true
spring.h2.console.settings.web-allow-others=false

### >> MYSQL /////////////
##### spring.datasource.url=jdbc:mysql://177.148.119.35:3306/infnet_alex_at?useTimezone=true&serverTimezone=UTC
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/infnet_alex_at?useTimezone=true&serverTimezone=UTC
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.username=naruto
#spring.datasource.password=swoordfish

### Keep the connection alive if idle for a long time (needed in production)
# spring.datasource.testWhileIdle = true
# spring.datasource.validationQuery = SELECT 1


# ===============================
# = MVC Config / VIEWS
# ===============================

spring.mvc.view.prefix= /WEB-INF/views/
spring.mvc.view.suffix= .jsp

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

## WITH JPA
# Show or not log for each sql query
spring.jpa.properties.hibernate.show_sql = true
#spring.jpa.show-sql = true
spring.jpa.properties.hibernate.use_sql_comments = true
spring.jpa.properties.hibernate.format_sql = true

## -- WITH HIBERNATE
# show sql statement
#logging.level.org.hibernate.SQL=debug
# show sql values
#logging.level.org.hibernate.type.descriptor.sql=trace

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
####  # NAO RECOMENDADO
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# spring.jpa.hibernate.use-new-id-generator-mappings=false
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# LOG IN FILE
#https://stackoverflow.com/questions/30118683/how-to-log-sql-statements-in-spring-boot